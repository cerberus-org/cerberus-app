{
	"variables": [],
	"info": {
		"name": "cerberus-app",
		"_postman_id": "6e39817e-74ec-7fd4-d8ea-1c2d07b48199",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "organization",
			"description": "",
			"item": [
				{
					"name": "Insert organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 or 409\"] = responseCode.code === 201 || 409;",
									"",
									"if (responseCode.code === 201) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"_id is correct\"] = jsonData._id === \"59a7055733bfe28af47cff40\";",
									"    tests[\"name is correct\"] = jsonData.name === \"Jefferson SPCA\";",
									"    tests[\"description is correct\"] = jsonData.description === \"The Jefferson SPCA exists to support the Jefferson Parish Animal Shelter, and aid in its lifesaving mission. Our programs prevent and address animal cruelty and provide much-needed medical treatment, rescues, and ultimately adoptions for homeless pets.\";",
									"    tests[\"website is correct\"] = jsonData.website === \"www.jeffersonspca.org\";",
									"} else if (responseCode.code === 409) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"code is correct\"] = jsonData.code === 11000;",
									"}",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/organization",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"_id\": \"59a7055733bfe28af47cff40\",\n\t\"name\": \"Jefferson SPCA\",\n\t\"description\": \"The Jefferson SPCA exists to support the Jefferson Parish Animal Shelter, and aid in its lifesaving mission. Our programs prevent and address animal cruelty and provide much-needed medical treatment, rescues, and ultimately adoptions for homeless pets.\",\n\t\"website\": \"www.jeffersonspca.org\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get all organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"_id is correct\"] = jsonData[0]._id === \"59a7055733bfe28af47cff40\";",
									"tests[\"name is correct\"] = jsonData[0].name === \"Jefferson SPCA\";",
									"tests[\"description is correct\"] = jsonData[0].description === \"The Jefferson SPCA exists to support the Jefferson Parish Animal Shelter, and aid in its lifesaving mission. Our programs prevent and address animal cruelty and provide much-needed medical treatment, rescues, and ultimately adoptions for homeless pets.\";",
									"tests[\"website is correct\"] = jsonData[0].website === \"www.jeffersonspca.org\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/organizations",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get organization by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200 || 404;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"_id is correct\"] = jsonData._id === \"59a7055733bfe28af47cff40\";",
									"tests[\"name is correct\"] = jsonData.name === \"Jefferson SPCA\";",
									"tests[\"description is correct\"] = jsonData.description === \"The Jefferson SPCA exists to support the Jefferson Parish Animal Shelter, and aid in its lifesaving mission. Our programs prevent and address animal cruelty and provide much-needed medical treatment, rescues, and ultimately adoptions for homeless pets.\";",
									"tests[\"website is correct\"] = jsonData.website === \"www.jeffersonspca.org\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/organization/59a7055733bfe28af47cff40",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Count all organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Count is correct\"] = responseBody.has(1);",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visits/count",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update organization by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204 or 409\"] = responseCode.code === 204 || 409;",
									"",
									"if (responseCode.code === 200) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"_id is correct\"] = jsonData._id === \"59a7055733bfe28af47cff40\";",
									"    tests[\"name is correct\"] = jsonData.name === \"EDIT-Jefferson SPCA\";",
									"    tests[\"description is correct\"] = jsonData.description === \"EDIT-The Jefferson SPCA exists to support the Jefferson Parish Animal Shelter, and aid in its lifesaving mission. Our programs prevent and address animal cruelty and provide much-needed medical treatment, rescues, and ultimately adoptions for homeless pets.\";",
									"    tests[\"website is correct\"] = jsonData.website === \"www.editjeffersonspca.org\";",
									"} else if (responseCode.code === 409) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"code is correct\"] = jsonData.code === 11000;",
									"}",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/organization/59a7055733bfe28af47cff40",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"EDIT-Jefferson SPCA\",\n\t\"description\": \"EDIT-The Jefferson SPCA exists to support the Jefferson Parish Animal Shelter, and aid in its lifesaving mission. Our programs prevent and address animal cruelty and provide much-needed medical treatment, rescues, and ultimately adoptions for homeless pets.\",\n\t\"website\": \"www.editjeffersonspca.org\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete organization by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204 or 404\"] = responseCode.code === 204 || 404;",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/organization/59a7055733bfe28af47cff40",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "volunteer",
			"description": "",
			"item": [
				{
					"name": "Insert volunteer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 or 409\"] = responseCode.code === 201 || 409;",
									"",
									"if (responseCode.code === 201) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"_id is correct\"] = jsonData._id === \"594a861ace7ca574ae9070c8\";",
									"    tests[\"firstName is correct\"] = jsonData.firstName === \"Ted\";",
									"    tests[\"lastName is correct\"] = jsonData.lastName === \"Mader\";",
									"    tests[\"petName is correct\"] = jsonData.petName === \"Mimi\";",
									"} else if (responseCode.code === 409) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"code is correct\"] = jsonData.code === 11000;",
									"}",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/volunteer",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"_id\": \"594a861ace7ca574ae9070c8\",\n\t\"firstName\": \"Ted\",\n\t\"lastName\": \"Mader\",\n\t\"petName\": \"Mimi\"\n}"
						},
						"description": "volunteer: {\n  firstName: String,\n  lastName: String,\n  petName: String\n}"
					},
					"response": []
				},
				{
					"name": "Get all volunteers",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"_id is correct\"] = jsonData[0]._id === \"594a861ace7ca574ae9070c8\";",
									"tests[\"firstName is correct\"] = jsonData[0].firstName === \"Ted\";",
									"tests[\"lastName is correct\"] = jsonData[0].lastName === \"Mader\";",
									"tests[\"petName is correct\"] = jsonData[0].petName === \"Mimi\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/volunteers",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get volunteer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"_id is correct\"] = jsonData._id === \"594a861ace7ca574ae9070c8\";",
									"tests[\"firstName is correct\"] = jsonData.firstName === \"Ted\";",
									"tests[\"lastName is correct\"] = jsonData.lastName === \"Mader\";",
									"tests[\"petName is correct\"] = jsonData.petName === \"Mimi\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/volunteer/594a861ace7ca574ae9070c8",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "volunteer: {\n\tfirstName: Ted,\n\tlastName: Mader,\n\tpetName: Mimi\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Count all volunteers",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Count is correct\"] = responseBody.has(1);",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/volunteers/count",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update volunteer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204 or 409\"] = responseCode.code === 204 || 409;",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/volunteer/594a861ace7ca574ae9070c8",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Ted\",\n\t\"lastName\": \"Mader\",\n\t\"petName\": \"Gam-Gam\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete volunteer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204 or 404\"] = responseCode.code === 204 || 404;",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/volunteer/594a861ace7ca574ae9070c8",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "volunteer: {\n\tfirstName: Ted,\n\tlastName: Mader,\n\tpetName: Mimi\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"description": "",
			"item": [
				{
					"name": "Insert User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 or 409\"] = responseCode.code === 201 || 409;",
									"",
									"if (responseCode.code === 201) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"__v is correct\"] = jsonData.__v === 0;",
									"    tests[\"_id is correct\"] = jsonData._id === \"596178f9668eaf34ab10a35c\";",
									"    tests[\"email is correct\"] = jsonData.email === \"test@gmail.com\";",
									"    tests[\"username is correct\"] = jsonData.username === \"test\";",
									"} else if (responseCode.code === 409) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"code is correct\"] = jsonData.code === 11000;",
									"}",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/user",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"__v\": 0,\n\t\"_id\": \"596178f9668eaf34ab10a35c\",\n\t\"email\": \"test@gmail.com\",\n\t\"username\": \"test\",\n\t\"password\": \"test\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200 or 403\"] = responseCode.code === 200 || 403;\r",
									"\r",
									"if (responseCode.code === 200) {\r",
									"    // set env variable\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
									"    tests[\"token is returned\"] = jsonData.token !== null;\r",
									"} else {\r",
									"    responseCode.code === 403\r",
									"}\r",
									"\r",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/user/login",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "",
								"value": "",
								"description": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"test@gmail.com\",\n\t\"username\": \"test\",\n\t\"password\": \"test\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"__v is correct\"] = jsonData[0].__v === 0;",
									"tests[\"_id is correct\"] = jsonData[0]._id === \"596178f9668eaf34ab10a35c\";",
									"tests[\"email is correct\"] = jsonData[0].email === \"test@gmail.com\";",
									"tests[\"username is correct\"] = jsonData[0].username === \"test\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/users",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200 || 404;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"__v is correct\"] = jsonData.__v === 0;",
									"tests[\"_id is correct\"] = jsonData._id === \"596178f9668eaf34ab10a35c\";",
									"tests[\"email is correct\"] = jsonData.email === \"test@gmail.com\";",
									"tests[\"username is correct\"] = jsonData.username === \"test\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/user/596178f9668eaf34ab10a35c",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Count all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Count is correct\"] = responseBody.has(1);",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visits/count",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204 or 409\"] = responseCode.code === 204 || 409;",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/user/596178f9668eaf34ab10a35c",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1c2VyIjp7Il9pZCI6IjU5NjE3OGY5NjY4ZWFmMzRhYjEwYTM1YyIsIl9fdiI6MCwiZW1haWwiOiJ0ZXN0QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoidGVzdCJ9fQ.EyJq4lNYEYsU1l5A-ErAr-TfQjM_7hXlkQ42E8FcPYhq8gNnD5gB0YaIPG2b-sbatPhvUO6ClO5J3GZNRfPl2g",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"_id\": \"596178f9668eaf34ab10a35c\",\n    \"email\": \"test@gmail.com\",\n    \"username\": \"test\",\n    \"password\": \"testing\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204 or 404\"] = responseCode.code === 204 || 404;",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/user/596178f9668eaf34ab10a35c",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "visit",
			"description": "",
			"item": [
				{
					"name": "Insert visit",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201 or 409\"] = responseCode.code === 201 || 409;",
									"",
									"if (responseCode.code === 201) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"_id is correct\"] = jsonData._id === \"674a861ace7ca574af9070c8\";",
									"    tests[\"volunteerId is correct\"] = jsonData.volunteerId === \"594a861ace7ca574ae9070c8\";",
									"    tests[\"timezone is correct\"] = jsonData.timezone === \"America/Los_Angeles\";",
									"    tests[\"startedAt is correct\"] = jsonData.startedAt === \"2017-07-17T21:20:31.814Z\";",
									"} else if (responseCode.code === 409) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"code is correct\"] = jsonData.code === 11000;",
									"}",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visit",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"_id\": \"674a861ace7ca574af9070c8\",\n\t\"volunteerId\": \"594a861ace7ca574ae9070c8\",\n\t\"timezone\": \"America/Los_Angeles\",\n\t\"startedAt\": \"2017-07-17T21:20:31.814Z\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get all visits",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"_id is correct\"] = jsonData[0]._id === \"674a861ace7ca574af9070c8\";",
									"tests[\"volunteerId is correct\"] = jsonData[0].volunteerId === \"594a861ace7ca574ae9070c8\";",
									"tests[\"timezone is correct\"] = jsonData[0].timezone === \"America/Los_Angeles\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visits",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get visit by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200 || 404;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"_id is correct\"] = jsonData._id === \"674a861ace7ca574af9070c8\";",
									"tests[\"volunteerId is correct\"] = jsonData.volunteerId === \"594a861ace7ca574ae9070c8\";",
									"tests[\"timezone is correct\"] = jsonData.timezone === \"America/Los_Angeles\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visit/674a861ace7ca574af9070c8",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Count all visits ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Count is correct\"] = responseBody.has(1);",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visits/count",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update visit by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204 or 409\"] = responseCode.code === 204 || 409;",
									"",
									"if (responseCode.code === 200) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"_id is correct\"] = jsonData._id === \"674a861ace7ca574af9070c8\";",
									"    tests[\"volunteerId is correct\"] = jsonData.volunteerId === \"594a861ace7ca574ae9070c8\";",
									"    tests[\"timezone is correct\"] = jsonData.timezone === \"America/Los_Angeles\";",
									"    tests[\"startedAt is correct\"] = jsonData.startedAt === \"2017-07-17T21:20:31.814Z\";",
									"    tests[\"endedAt is correct\"] = jsonData.endedAt === \"2017-07-17T22:20:31.814Z\";",
									"} else if (responseCode.code === 409) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    tests[\"code is correct\"] = jsonData.code === 11000;",
									"}",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visit/674a861ace7ca574af9070c8",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"endedAt\": \"2017-07-17T22:20:31.814Z\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get visits by date",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"_id is correct\"] = jsonData[0]._id === \"674a861ace7ca574af9070c8\";",
									"tests[\"volunteerId is correct\"] = jsonData[0].volunteerId === \"594a861ace7ca574ae9070c8\";",
									"tests[\"timezone is correct\"] = jsonData[0].timezone === \"America/Los_Angeles\";",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visits/2017-07-06T01:33:27.337Z",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete visit by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 204 or 404\"] = responseCode.code === 204 || 404;",
									"",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"url": "localhost:3000/api/visit/674a861ace7ca574af9070c8",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}